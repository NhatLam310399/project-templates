{"version":3,"sources":["designs/Table/index.tsx","common/hooks/usePage.tsx","components/AlertDialog/index.tsx","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","constants/typeByCodes/index.tsx","pages/dashboard/Setting/AdsByImage/components/Dialog/index.tsx","pages/dashboard/Setting/AdsByImage/index.tsx"],"names":["TableCustom","className","data","columns","headerElement","sizePerPage","onPageChange","page","isRemote","totalSize","loading","onClickRow","onTableChange","handleChangePage","e","nextPage","handleTableChange","type","rowEvents","onClick","rowIndex","totalPage","Math","ceil","length","bootstrap4","keyField","search","props","baseProps","bordered","wrapperClasses","pagination","paginationFactory","hideSizePerPage","custom","remote","filter","sort","count","onChange","name","memo","usePage","initialPage","Number","history","useHistory","useState","state","setState","useCallback","newPage","push","location","pathname","AlertDialog","ButtonMenu","title","content","onConfirm","note","React","open","setOpen","handleClose","onClose","maxWidth","fullWidth","PaperProps","style","backgroundColor","colors","white","borderRadius","padding","id","innerClassName","primary","DialogTitle","ref","children","classes","_props$disableTypogra","disableTypography","other","_objectWithoutProperties","_extends","clsx","root","Typography","component","variant","withStyles","margin","flex","DialogContentText","color","marginBottom","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","value","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","STATIC_PAGE","ADS_BY_IMAGE","ADS_BY_CODE","ConfigAdsByImageDialog","dispatch","useDispatch","useSelector","types","listTypes","listAdsPositions","isEdit","editField","formField","setFormField","adsLocationSelected","setAdsLocationSelected","useEffect","getTypesByCode","code","displayLocation","handleChangeInput","Dialog","input","customSizeForUploadImage","CUSTOM_SIZE_UPLOAD_PAGE_IMAGE","payload","_id","fieldsToUpdate","updateAds","createAdsInput","createAds","undefined","t","SingleImageUploader","image","urlImage","small","imageCrop","Input","label","validates","required","errorMessage","Select","options","onSelectOption","option","link","withRouter","getQueryFromLocation","setPage","isRemoveAction","setIsRemoveAction","ads","allAds","actionSuccess","common","listAds","setListAds","setupBreadcrumb","setBreadcrumb","getAllAdsAPI","renderAds","shouldDecreasePageIndex","resetAction","draftArray","getAdsAll","filterAds","renderAction","record","SVG","removeAds","handleDelete","useMemo","text","dataField","headerStyle","width","formatter","src","default","medium","NoImage","alt","cell","i18n","language","Button","Table"],"mappings":"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","file":"static/js/28.c8396c6f.chunk.js","sourcesContent":["/**\n * @note read the document in /src/docs/designs/Table.md.\n * You should read it in gitlab.\n */\n\nimport React, { memo } from \"react\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable, { ColumnDescription } from \"react-bootstrap-table-next\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport SVG from \"designs/SVG\";\nimport { ITableProps } from \"./interfaces\";\n\nexport type IColumns = ColumnDescription<any, any>[];\n\nconst TableCustom: React.FC<ITableProps> = ({\n    className = \"\",\n    data,\n    columns,\n    headerElement,\n    sizePerPage = 10,\n    onPageChange,\n    page = 1,\n    isRemote = false,\n    totalSize = 0,\n    loading = true,\n    onClickRow,\n    onTableChange,\n}) => {\n    const handleChangePage = (\n        e: React.ChangeEvent<unknown>,\n        nextPage: number,\n    ) => {\n        onPageChange && onPageChange(nextPage);\n    };\n\n    const handleTableChange = (\n        type: string,\n        { page, sizePerPage }: Record<any, any>,\n    ) => {\n        const newPage = page - 1;\n\n        onTableChange && onTableChange(newPage);\n    };\n\n    // const handleEmptyData = () => {\n    //     return (\n    //         <div className=\"empty-data\">\n    //             <SVG name=\"common/empty-data\" />\n    //         </div>\n    //     );\n    // };\n\n    const rowEvents = {\n        onClick: (rowIndex: number) => {\n            onClickRow && onClickRow(rowIndex);\n        },\n    };\n\n    const totalPage = Math.ceil(totalSize / sizePerPage);\n\n    return !loading && data?.length === 0 ? (\n        <div className=\"flex items-center justify-center w-full h-full mt-10 empty-data\">\n            <SVG name=\"common/empty-data\" />\n        </div>\n    ) : (\n        <div className={`custom-table__container ${className}`}>\n            <ToolkitProvider\n                bootstrap4\n                keyField=\"id\"\n                data={data}\n                columns={columns}\n                search\n            >\n                {(props: any) => {\n                    return (\n                        <>\n                            <div>{headerElement}</div>\n                            <BootstrapTable\n                                {...props.baseProps}\n                                bordered={false}\n                                wrapperClasses=\"table-responsive col-span-12 overflow-auto lg:overflow-visible font-sfpro\"\n                                rowEvents={rowEvents}\n                                pagination={paginationFactory({\n                                    hideSizePerPage: true,\n                                    sizePerPage,\n                                    page,\n                                    totalSize,\n                                    custom: true,\n                                })}\n                                remote={\n                                    isRemote && {\n                                        pagination: true,\n                                        filter: false,\n                                        sort: false,\n                                    }\n                                }\n                                onTableChange={handleTableChange}\n                            />\n                            {totalSize !== 0 && (\n                                <div className=\"flex justify-end mt-3 pagination-wrap\">\n                                    <Pagination\n                                        page={page}\n                                        count={totalPage}\n                                        onChange={handleChangePage}\n                                    />\n                                </div>\n                            )}\n                        </>\n                    );\n                }}\n            </ToolkitProvider>\n        </div>\n    );\n};\n\nexport default memo(TableCustom);\n","import { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\ntype IQueryPage = string | string[] | null;\n\nexport const usePage = (\n    page: IQueryPage,\n): [number, (newPage: number) => void] => {\n    const initialPage = page ? Number(page) : 1;\n    const history = useHistory();\n    const [state, setState] = useState(Number(initialPage));\n    const setPage = useCallback((newPage: number) => {\n        setState(newPage);\n        history.push(`${history.location.pathname}?page=${newPage}`);\n    }, []);\n\n    return [state, setPage];\n};\n","import React from \"react\";\nimport Button from \"designs/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { colors } from \"common/styles/colors\";\n\ninterface IAlertDialogProps {\n    ButtonMenu: React.ReactElement;\n    title: string;\n    content?: string | undefined;\n    onConfirm?: (data: any) => void;\n    data?: any;\n    className?: string;\n    note?: string;\n}\n\nconst AlertDialog: React.FC<IAlertDialogProps> = props => {\n    const {\n        ButtonMenu,\n        title = \"\",\n        content = \"\",\n        onConfirm,\n        data,\n        className = \"\",\n        note = \"\",\n    } = props;\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleConfirm = (e: React.MouseEvent<HTMLButtonElement>) => {\n        onConfirm && onConfirm(data);\n        setOpen(false);\n    };\n\n    return (\n        <div className={`${className}`}>\n            <button\n                type=\"button\"\n                className=\"block w-full\"\n                onClick={handleClickOpen}\n            >\n                {ButtonMenu}\n            </button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                maxWidth=\"sm\"\n                fullWidth\n                PaperProps={{\n                    style: {\n                        backgroundColor: colors.white,\n                        borderRadius: \"0px\",\n                        padding: \"40px\",\n                    },\n                }}\n            >\n                <DialogTitle className=\"p-0 mb-2\" id=\"alert-dialog-title\">\n                    <h1 className=\"font-bold leading-none text-xxl font-sfpro\">\n                        {title}\n                    </h1>\n                </DialogTitle>\n                <DialogContent className=\"p-0 mb-3\">\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <span className=\"block text-lg leading-none text-black font-sfpro\">\n                            {content}\n                        </span>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions className=\"flex flex-col w-full gap-2 p-0 phone:flex-row\">\n                    <Button\n                        className=\"w-full phone:w-auto\"\n                        innerClassName=\"py-1 px-3.5 h-4 font-normal normal-case border-none\"\n                        onClick={handleClose}\n                        type=\"button\"\n                    >\n                        Huỷ bỏ\n                    </Button>\n                    <Button\n                        className=\"w-full phone:w-auto\"\n                        primary\n                        innerClassName=\"py-1 px-3.5 h-4 font-normal normal-case\"\n                        onClick={handleConfirm}\n                        type=\"submit\"\n                    >\n                        Đồng ý\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AlertDialog;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export const STATIC_PAGE = \"STATIC_PAGE\";\nexport const ADS_BY_IMAGE = \"ADS_BY_IMAGE\";\nexport const ADS_BY_CODE = \"ADS_BY_CODE\";\n","import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    IAds,\n    IAdsInput,\n    ICreateAds,\n    IUpdateAds,\n    IRootState,\n    ITypes,\n} from \"common/formatTypes\";\nimport Dialog, { DialogTitle } from \"components/Dialog\";\nimport Input from \"designs/Input\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"designs/Select\";\nimport SingleImageUploader from \"components/SingleImageUploader\";\n\nimport { getTypesByCode } from \"redux/actions/types\";\nimport { ADS_BY_IMAGE } from \"constants/typeByCodes\";\nimport { CUSTOM_SIZE_UPLOAD_PAGE_IMAGE } from \"constants/image\";\nimport { createAds, updateAds } from \"redux/actions/ads\";\nimport { t } from \"language\";\n\ninterface IConfigAdsByImageDialogProps {\n    ButtonMenu: React.ReactElement;\n    isEdit?: boolean;\n    editField?: IAds;\n    className?: string;\n}\n\nconst ConfigAdsByImageDialog: React.FC<IConfigAdsByImageDialogProps> =\n    props => {\n        const dispatch = useDispatch();\n        const { listTypes: listAdsPositions = [] } = useSelector(\n            (state: IRootState) => state.types,\n        );\n        const { ButtonMenu, isEdit, editField, className } = props;\n        const [formField, setFormField] = useState<IAdsInput>({});\n        const [adsLocationSelected, setAdsLocationSelected] =\n            useState<ITypes>();\n\n        useEffect(() => {\n            dispatch(getTypesByCode({ code: ADS_BY_IMAGE }));\n        }, []);\n\n        useEffect(() => {\n            if (editField) {\n                setAdsLocationSelected(editField?.displayLocation);\n            }\n        }, [editField]);\n\n        const handleSubmit = () => {\n            const input: IAdsInput = {\n                ...formField,\n                customSizeForUploadImage: CUSTOM_SIZE_UPLOAD_PAGE_IMAGE,\n            };\n\n            if (isEdit) {\n                const payload: IUpdateAds = {\n                    id: editField?._id || null,\n                    fieldsToUpdate: input,\n                };\n                dispatch(updateAds(payload));\n            } else {\n                const payload: ICreateAds = {\n                    createAdsInput: input,\n                };\n                dispatch(createAds(payload));\n            }\n        };\n\n        const handleChangeInput = (\n            // using for all input have value with type below:\n            value = \"\",\n            name?: string,\n        ) => {\n            name && setFormField({ ...formField, [name]: value });\n        };\n\n        const handleClose = () => {\n            setFormField({});\n            if (!editField) {\n                setAdsLocationSelected(undefined);\n            }\n        };\n\n        return (\n            <Dialog\n                ButtonMenu={ButtonMenu}\n                onConfirm={handleSubmit}\n                onClose={handleClose}\n                className={className}\n            >\n                <div className=\"w-full m-auto\">\n                    <DialogTitle>\n                        {isEdit\n                            ? t(\"configAds.title-edit-img\")\n                            : t(\"configAds.title-add-img\")}\n                    </DialogTitle>\n                    <div className=\"my-2\">\n                        <p className=\"\">\n                            {t(\"configAds.image\")}{\" \"}\n                            <span className=\"text-body\">\n                                {t(\"common.image-help-input\")}\n                            </span>{\" \"}\n                        </p>\n                        <SingleImageUploader\n                            image={editField?.urlImage?.small}\n                            className=\"mt-1 rounded-md\"\n                            onChange={urlImage => {\n                                setFormField(state => ({\n                                    ...state,\n                                    urlImage,\n                                }));\n                            }}\n                            imageCrop={false}\n                        />\n                    </div>\n                    <Input\n                        className=\"mb-2\"\n                        label={t(\"configAds.ads_name\")}\n                        value={editField?.name}\n                        name=\"name\"\n                        onChange={handleChangeInput}\n                        validates={{\n                            required: {\n                                errorMessage: t(\"generalSetting.null.ads-name\"),\n                            },\n                        }}\n                    />\n                    <Select\n                        label={t(\"configAds.ads_position\")}\n                        value={adsLocationSelected?.name}\n                        options={listAdsPositions}\n                        className=\"mb-2\"\n                        required\n                        errorMessage={t(\"generalSetting.null.select-position\")}\n                        onSelectOption={option => {\n                            setAdsLocationSelected(option);\n                            setFormField(state => ({\n                                ...state,\n                                displayLocation: option._id,\n                            }));\n                        }}\n                    />\n                    <Input\n                        className=\"mb-2\"\n                        label={t(\"configAds.ads_link\")}\n                        value={editField?.link}\n                        name=\"link\"\n                        onChange={handleChangeInput}\n                        validates={{\n                            required: {\n                                errorMessage: t(\"generalSetting.null.link\"),\n                            },\n                        }}\n                    />\n                </div>\n            </Dialog>\n        );\n    };\n\nexport default ConfigAdsByImageDialog;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table, { IColumns } from \"designs/Table\";\nimport SVG from \"designs/SVG\";\nimport i18n, { t } from \"language\";\nimport AlertDialog from \"components/AlertDialog\";\nimport { IRootState } from \"redux/reducers\";\nimport {\n    IAds,\n    ICustomSizeImages,\n    IGetAdsAll,\n    ITypes,\n} from \"common/formatTypes\";\nimport { setBreadcrumb } from \"redux/actions/_config\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { usePage } from \"common/hooks/usePage\";\nimport { getQueryFromLocation } from \"common/functions/route/getQueryFromLocationl\";\nimport { getAdsAll, removeAds } from \"redux/actions/ads\";\nimport { resetAction } from \"redux/actions/common\";\nimport { shouldDecreasePageIndex } from \"common/functions\";\nimport Button from \"designs/Button\";\nimport NoImage from \"assets/svg/common/img-skeleton.svg\";\nimport Dialog from \"./components/Dialog\";\n\nconst SIZE_PER_PAGE = 10;\nconst AdsByCode: React.FC<RouteComponentProps> = ({ location }) => {\n    const dispatch = useDispatch();\n    const [page, setPage] = usePage(getQueryFromLocation(location)?.page);\n    const [isRemoveAction, setIsRemoveAction] = useState<boolean>(false);\n    const { allAds = [], loading = true } = useSelector(\n        (state: IRootState) => state.ads,\n    );\n    const { actionSuccess } = useSelector((state: IRootState) => state.common);\n\n    const [listAds, setListAds] = useState<IAds[]>([]);\n\n    useEffect(() => {\n        setupBreadcrumb();\n    }, [page]);\n    const setupBreadcrumb = () => {\n        dispatch(\n            setBreadcrumb([\n                {\n                    name: t(\"breadcrumb.ads_by_image\"),\n                },\n            ]),\n        );\n    };\n\n    useEffect(() => {\n        getAllAdsAPI();\n    }, []);\n\n    useEffect(() => {\n        renderAds();\n    }, [allAds]);\n\n    useEffect(() => {\n        if (actionSuccess) {\n            if (\n                isRemoveAction &&\n                shouldDecreasePageIndex(page, allAds.length, SIZE_PER_PAGE)\n            ) {\n                setPage(page - 1);\n            }\n            dispatch(resetAction());\n            setIsRemoveAction(false);\n            getAllAdsAPI();\n        }\n    }, [actionSuccess]);\n\n    const renderAds = () => {\n        const draftArray = [];\n        for (const ads of allAds) {\n            if (ads.displayLocation?.code === \"ADS_BY_IMAGE\") {\n                draftArray.push(ads);\n            }\n        }\n        setListAds(draftArray);\n    };\n\n    const getAllAdsAPI = () => {\n        const payload: IGetAdsAll = {\n            filterAds: {},\n        };\n        dispatch(getAdsAll(payload));\n    };\n\n    const handleDelete = (record: IAds) => {\n        dispatch(\n            removeAds({\n                id: record._id!,\n            }),\n        );\n        setIsRemoveAction(true);\n    };\n    const handleChangePage = useCallback((nextPage: number) => {\n        setPage(nextPage);\n    }, []);\n\n    const renderAction = (record: IAds) => {\n        return (\n            <div className=\"flex justify-end\">\n                <AlertDialog\n                    className=\"ml-1 \"\n                    ButtonMenu={<SVG name=\"common/delete\" />}\n                    title={t(\"configAds.title-delete-img\")}\n                    content={t(\"configAds.content-delete\")}\n                    onConfirm={() => handleDelete(record)}\n                />\n                <Dialog\n                    ButtonMenu={<SVG name=\"common/edit\" className=\"ml-1\" />}\n                    isEdit\n                    editField={record}\n                />\n            </div>\n        );\n    };\n\n    const columns: IColumns = useMemo(\n        () => [\n            {\n                text: t(\"configAds.img_title\"),\n                dataField: \"urlImage\",\n                headerStyle: () => ({\n                    width: \"20%\",\n                }),\n                formatter: (urlImage: ICustomSizeImages) => (\n                    <div className=\"\">\n                        <img\n                            src={\n                                urlImage?.small ||\n                                urlImage?.default ||\n                                urlImage.medium ||\n                                NoImage\n                            }\n                            className=\"object-cover w-12 h-7\"\n                            alt=\"thumbnail\"\n                        />\n                        {/* this is the trick for width img in mobile */}\n                        <div className=\"w-20 laptop:w-0\" />\n                    </div>\n                ),\n            },\n            {\n                text: t(\"configAds.type_name\"),\n                dataField: \"name\",\n            },\n            {\n                text: t(\"configAds.ads_position\"),\n                dataField: \"displayLocation\",\n                formatter: (displayLocation: ITypes) => (\n                    <div>{displayLocation?.name}</div>\n                ),\n            },\n            {\n                text: t(\"configAds.ads_link\"),\n                dataField: \"link\",\n            },\n            {\n                text: t(\"configAds.action\"),\n                dataField: \"actions\",\n                formatter: (cell: null, record: IAds) => renderAction(record),\n            },\n        ],\n        [i18n.language],\n    );\n    return (\n        <div className=\"\">\n            <h1 className=\"mb-2 font-bold leading-none text-xxl font-sfpro\">\n                {t(\"breadcrumb.ads_by_image\")}\n            </h1>\n            <div className=\"flex flex-col items-center justify-end w-full max-w-full gap-2 pb-3 phone:flex-row\">\n                <Dialog\n                    ButtonMenu={\n                        <Button\n                            primary\n                            innerClassName=\"py-1.5 h-4 text-lg font-medium font-sfpro normal-case h-full\"\n                            type=\"submit\"\n                        >\n                            {t(\"configAds.title-add\")}\n                        </Button>\n                    }\n                    className=\"w-full max-w-full phone:w-25\"\n                />\n            </div>\n            <Table\n                data={listAds}\n                columns={columns}\n                totalSize={allAds.length}\n                page={page}\n                loading={loading}\n                onPageChange={handleChangePage}\n                sizePerPage={SIZE_PER_PAGE}\n            />\n        </div>\n    );\n};\nexport default withRouter(AdsByCode);\n"],"sourceRoot":""}