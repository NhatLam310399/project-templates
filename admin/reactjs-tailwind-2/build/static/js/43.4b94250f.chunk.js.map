{"version":3,"sources":["pages/dashboard/OtherSetting/Point/index.tsx"],"names":["PointSetting","props","dispatch","useDispatch","pointSetting","useSelector","state","otherSetting","useState","inputField","setInputField","useEffect","setupBreadcrumb","getPointSettingAPI","setBreadcrumb","name","t","getPointSetting","handleChangeInput","value","Number","className","onSubmit","payload","pointSettingInput","updatePointSetting","label","postPoint","onChange","type","helpInputText","placeholder","expiredTime","ratePoint","defaultPoint","viewPoint","primary","innerClassName"],"mappings":"8QA2IeA,UA3H+B,SAAAC,GAC1C,IAAMC,EAAWC,cAETC,EAAiBC,aACrB,SAACC,GAAD,OAAuBA,EAAMC,gBADzBH,aAIR,EAAoCI,mBAAwB,IAA5D,mBAAOC,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACNC,IACAC,MACD,IAEH,IAAMD,EAAkB,WACpBV,EACIY,YAAc,CACV,CACIC,KAAMC,YAAE,iCAMlBH,EAAqB,WACvBX,EAASe,gBAGPC,EAAoB,WAIpB,IAFFC,EAEC,uDAFO,GACRJ,EACC,uCACDA,GAAQL,EAAc,2BAAKD,GAAN,kBAAmBM,EAAOK,OAAOD,OAU1D,OACI,sBAAKE,UAAU,SAAf,UACI,oBAAIA,UAAU,yBAAd,SACKL,YAAE,8BAEP,eAAC,gBAAD,CACIM,SAbS,WACjB,IAAMC,EAA+B,CACjCC,kBAAmBf,GAEvBP,EAASuB,YAAmBF,KAUpBF,UAAU,8BAFd,UAII,sBAAKA,UAAU,yBAAf,UACI,cAAC,IAAD,CACIA,UAAU,+BACVK,MAAOV,YAAE,2BACTG,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAcuB,UACrBZ,KAAK,YACLa,SAAUV,EACVW,KAAK,SACLC,cAAed,YAAE,gCACjBe,YAAaf,YAAE,yCAEnB,cAAC,IAAD,CACIK,UAAU,+BACVK,MAAOV,YAAE,8BACTG,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAc4B,YACrBjB,KAAK,cACLa,SAAUV,EACVW,KAAK,SACLC,cAAed,YAAE,mCACjBe,YAAaf,YACT,4CAGR,cAAC,IAAD,CACIK,UAAU,+BACVK,MAAOV,YAAE,6BACTG,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAc6B,UACrBlB,KAAK,YACLa,SAAUV,EACVW,KAAK,SACLC,cAAed,YAAE,kCACjBe,YAAaf,YAAE,2CAEnB,cAAC,IAAD,CACIK,UAAU,+BACVK,MAAOV,YAAE,8BACTG,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAc8B,aACrBnB,KAAK,eACLa,SAAUV,EACVW,KAAK,SACLC,cAAed,YAAE,mCACjBe,YAAaf,YACT,4CAGR,cAAC,IAAD,CACIK,UAAU,+BACVK,MAAOV,YAAE,2BACTG,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAc+B,UACrBpB,KAAK,YACLa,SAAUV,EACVW,KAAK,SACLC,cAAed,YAAE,gCACjBe,YAAaf,YAAE,4CAGvB,qBAAKK,UAAU,+BAAf,SACI,cAAC,IAAD,CACIQ,KAAK,SACLO,SAAO,EACPf,UAAU,OACVgB,eAAe,+CAJnB,SAMKrB,YAAE","file":"static/js/43.4b94250f.chunk.js","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { setBreadcrumb } from \"redux/actions/_config\";\nimport { t } from \"language\";\nimport { PATH } from \"constants/routes\";\nimport { useEffect, useState } from \"react\";\nimport Input from \"designs/Input\";\nimport { IRootState, IUpdatePointSetting } from \"common/formatTypes\";\nimport {\n    getPointSetting,\n    updatePointSetting,\n} from \"redux/actions/otherSetting\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport Button from \"designs/Button\";\n\ninterface IPointSetting {}\n\nconst PointSetting: React.FC<IPointSetting> = props => {\n    const dispatch = useDispatch();\n\n    const { pointSetting } = useSelector(\n        (state: IRootState) => state.otherSetting,\n    );\n\n    const [inputField, setInputField] = useState<IPointSetting>({});\n\n    useEffect(() => {\n        setupBreadcrumb();\n        getPointSettingAPI();\n    }, []);\n\n    const setupBreadcrumb = () => {\n        dispatch(\n            setBreadcrumb([\n                {\n                    name: t(\"breadcrumb.point-setting\"),\n                },\n            ]),\n        );\n    };\n\n    const getPointSettingAPI = () => {\n        dispatch(getPointSetting());\n    };\n\n    const handleChangeInput = (\n        // using for all input have value with type below:\n        value = \"\",\n        name?: string,\n    ) => {\n        name && setInputField({ ...inputField, [name]: Number(value) });\n    };\n\n    const handleSubmit = () => {\n        const payload: IUpdatePointSetting = {\n            pointSettingInput: inputField,\n        };\n        dispatch(updatePointSetting(payload));\n    };\n\n    return (\n        <div className=\"w-full\">\n            <h1 className=\"font-semibold text-xxl\">\n                {t(\"breadcrumb.point-setting\")}\n            </h1>\n            <ValidatorForm\n                onSubmit={handleSubmit}\n                className=\"mt-3 font-medium font-sfpro\"\n            >\n                <div className=\"grid grid-cols-2 gap-2\">\n                    <Input\n                        className=\"col-span-2 laptop:col-span-1\"\n                        label={t(\"otherSetting.point.post\")}\n                        value={pointSetting?.postPoint}\n                        name=\"postPoint\"\n                        onChange={handleChangeInput}\n                        type=\"number\"\n                        helpInputText={t(\"otherSetting.point.help.post\")}\n                        placeholder={t(\"otherSetting.point.placeholder.post\")}\n                    />\n                    <Input\n                        className=\"col-span-2 laptop:col-span-1\"\n                        label={t(\"otherSetting.point.expired\")}\n                        value={pointSetting?.expiredTime}\n                        name=\"expiredTime\"\n                        onChange={handleChangeInput}\n                        type=\"number\"\n                        helpInputText={t(\"otherSetting.point.help.expired\")}\n                        placeholder={t(\n                            \"otherSetting.point.placeholder.expired\",\n                        )}\n                    />\n                    <Input\n                        className=\"col-span-2 laptop:col-span-1\"\n                        label={t(\"otherSetting.point.rating\")}\n                        value={pointSetting?.ratePoint}\n                        name=\"ratePoint\"\n                        onChange={handleChangeInput}\n                        type=\"number\"\n                        helpInputText={t(\"otherSetting.point.help.rating\")}\n                        placeholder={t(\"otherSetting.point.placeholder.rating\")}\n                    />\n                    <Input\n                        className=\"col-span-2 laptop:col-span-1\"\n                        label={t(\"otherSetting.point.default\")}\n                        value={pointSetting?.defaultPoint}\n                        name=\"defaultPoint\"\n                        onChange={handleChangeInput}\n                        type=\"number\"\n                        helpInputText={t(\"otherSetting.point.help.default\")}\n                        placeholder={t(\n                            \"otherSetting.point.placeholder.default\",\n                        )}\n                    />\n                    <Input\n                        className=\"col-span-2 laptop:col-span-1\"\n                        label={t(\"otherSetting.point.view\")}\n                        value={pointSetting?.viewPoint}\n                        name=\"viewPoint\"\n                        onChange={handleChangeInput}\n                        type=\"number\"\n                        helpInputText={t(\"otherSetting.point.help.view\")}\n                        placeholder={t(\"otherSetting.point.placeholder.view\")}\n                    />\n                </div>\n                <div className=\"flex justify-end w-full mt-3\">\n                    <Button\n                        type=\"submit\"\n                        primary\n                        className=\"w-16\"\n                        innerClassName=\"font-medium h-4.5 w-full normal-case text-lg\"\n                    >\n                        {t(\"otherSetting.point.update\")}\n                    </Button>\n                </div>\n            </ValidatorForm>\n        </div>\n    );\n};\n\nexport default PointSetting;\n"],"sourceRoot":""}