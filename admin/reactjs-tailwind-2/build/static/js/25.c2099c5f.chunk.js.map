{"version":3,"sources":["designs/Table/index.tsx","common/hooks/usePage.tsx","components/AlertDialog/index.tsx","designs/TextArea/styles.tsx","designs/TextArea/index.tsx","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","constants/typeByCodes/index.tsx","pages/dashboard/Setting/AdsByCode/components/Dialog/index.tsx","pages/dashboard/Setting/AdsByCode/index.tsx"],"names":["TableCustom","className","data","columns","headerElement","sizePerPage","onPageChange","page","isRemote","totalSize","loading","onClickRow","onTableChange","handleChangePage","e","nextPage","handleTableChange","type","rowEvents","onClick","rowIndex","totalPage","Math","ceil","length","bootstrap4","keyField","search","props","baseProps","bordered","wrapperClasses","pagination","paginationFactory","hideSizePerPage","custom","remote","filter","sort","count","onChange","name","memo","usePage","initialPage","Number","history","useHistory","useState","state","setState","useCallback","newPage","push","location","pathname","AlertDialog","ButtonMenu","title","content","onConfirm","note","React","open","setOpen","handleClose","onClose","maxWidth","fullWidth","PaperProps","style","backgroundColor","colors","white","borderRadius","padding","id","innerClassName","primary","useStyles","makeStyles","inputFieldHidden","opacity","position","formHelperText","color","error","TextArea","label","value","required","helpInputText","errorMessage","t","placeholder","rest","validators","classes","randomId","text","setText","isError","setIsError","useEffect","TextField","width","multiline","rows","variant","event","currentValue","target","FormHelperText","errorMessages","validatorListener","isValid","DialogTitle","ref","children","_props$disableTypogra","disableTypography","other","_objectWithoutProperties","_extends","clsx","root","Typography","component","withStyles","margin","flex","DialogContentText","marginBottom","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","STATIC_PAGE","ADS_BY_IMAGE","ADS_BY_CODE","ConfigAdsByCodeDialog","dispatch","useDispatch","useSelector","types","listTypes","listAdsPositions","isEdit","editField","formField","setFormField","adsLocationSelected","setAdsLocationSelected","getTypesByCode","code","displayLocation","handleChangeInput","Dialog","input","payload","_id","fieldsToUpdate","updateAds","createAdsInput","createAds","undefined","Input","validates","Select","options","onSelectOption","option","link","withRouter","getQueryFromLocation","setPage","isRemoveAction","setIsRemoveAction","ads","allAds","actionSuccess","common","listAds","setListAds","setupBreadcrumb","setBreadcrumb","getAllAdsAPI","renderAds","shouldDecreasePageIndex","resetAction","draftArray","getAdsAll","filterAds","renderAction","record","SVG","removeAds","handleDelete","useMemo","dataField","formatter","cell","i18n","language","Button","Table"],"mappings":"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","file":"static/js/25.c2099c5f.chunk.js","sourcesContent":["/**\n * @note read the document in /src/docs/designs/Table.md.\n * You should read it in gitlab.\n */\n\nimport React, { memo } from \"react\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable, { ColumnDescription } from \"react-bootstrap-table-next\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport SVG from \"designs/SVG\";\nimport { ITableProps } from \"./interfaces\";\n\nexport type IColumns = ColumnDescription<any, any>[];\n\nconst TableCustom: React.FC<ITableProps> = ({\n    className = \"\",\n    data,\n    columns,\n    headerElement,\n    sizePerPage = 10,\n    onPageChange,\n    page = 1,\n    isRemote = false,\n    totalSize = 0,\n    loading = true,\n    onClickRow,\n    onTableChange,\n}) => {\n    const handleChangePage = (\n        e: React.ChangeEvent<unknown>,\n        nextPage: number,\n    ) => {\n        onPageChange && onPageChange(nextPage);\n    };\n\n    const handleTableChange = (\n        type: string,\n        { page, sizePerPage }: Record<any, any>,\n    ) => {\n        const newPage = page - 1;\n\n        onTableChange && onTableChange(newPage);\n    };\n\n    // const handleEmptyData = () => {\n    //     return (\n    //         <div className=\"empty-data\">\n    //             <SVG name=\"common/empty-data\" />\n    //         </div>\n    //     );\n    // };\n\n    const rowEvents = {\n        onClick: (rowIndex: number) => {\n            onClickRow && onClickRow(rowIndex);\n        },\n    };\n\n    const totalPage = Math.ceil(totalSize / sizePerPage);\n\n    return !loading && data?.length === 0 ? (\n        <div className=\"flex items-center justify-center w-full h-full mt-10 empty-data\">\n            <SVG name=\"common/empty-data\" />\n        </div>\n    ) : (\n        <div className={`custom-table__container ${className}`}>\n            <ToolkitProvider\n                bootstrap4\n                keyField=\"id\"\n                data={data}\n                columns={columns}\n                search\n            >\n                {(props: any) => {\n                    return (\n                        <>\n                            <div>{headerElement}</div>\n                            <BootstrapTable\n                                {...props.baseProps}\n                                bordered={false}\n                                wrapperClasses=\"table-responsive col-span-12 overflow-auto lg:overflow-visible font-sfpro\"\n                                rowEvents={rowEvents}\n                                pagination={paginationFactory({\n                                    hideSizePerPage: true,\n                                    sizePerPage,\n                                    page,\n                                    totalSize,\n                                    custom: true,\n                                })}\n                                remote={\n                                    isRemote && {\n                                        pagination: true,\n                                        filter: false,\n                                        sort: false,\n                                    }\n                                }\n                                onTableChange={handleTableChange}\n                            />\n                            {totalSize !== 0 && (\n                                <div className=\"flex justify-end mt-3 pagination-wrap\">\n                                    <Pagination\n                                        page={page}\n                                        count={totalPage}\n                                        onChange={handleChangePage}\n                                    />\n                                </div>\n                            )}\n                        </>\n                    );\n                }}\n            </ToolkitProvider>\n        </div>\n    );\n};\n\nexport default memo(TableCustom);\n","import { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\ntype IQueryPage = string | string[] | null;\n\nexport const usePage = (\n    page: IQueryPage,\n): [number, (newPage: number) => void] => {\n    const initialPage = page ? Number(page) : 1;\n    const history = useHistory();\n    const [state, setState] = useState(Number(initialPage));\n    const setPage = useCallback((newPage: number) => {\n        setState(newPage);\n        history.push(`${history.location.pathname}?page=${newPage}`);\n    }, []);\n\n    return [state, setPage];\n};\n","import React from \"react\";\nimport Button from \"designs/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { colors } from \"common/styles/colors\";\n\ninterface IAlertDialogProps {\n    ButtonMenu: React.ReactElement;\n    title: string;\n    content?: string | undefined;\n    onConfirm?: (data: any) => void;\n    data?: any;\n    className?: string;\n    note?: string;\n}\n\nconst AlertDialog: React.FC<IAlertDialogProps> = props => {\n    const {\n        ButtonMenu,\n        title = \"\",\n        content = \"\",\n        onConfirm,\n        data,\n        className = \"\",\n        note = \"\",\n    } = props;\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleConfirm = (e: React.MouseEvent<HTMLButtonElement>) => {\n        onConfirm && onConfirm(data);\n        setOpen(false);\n    };\n\n    return (\n        <div className={`${className}`}>\n            <button\n                type=\"button\"\n                className=\"block w-full\"\n                onClick={handleClickOpen}\n            >\n                {ButtonMenu}\n            </button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                maxWidth=\"sm\"\n                fullWidth\n                PaperProps={{\n                    style: {\n                        backgroundColor: colors.white,\n                        borderRadius: \"0px\",\n                        padding: \"40px\",\n                    },\n                }}\n            >\n                <DialogTitle className=\"p-0 mb-2\" id=\"alert-dialog-title\">\n                    <h1 className=\"font-bold leading-none text-xxl font-sfpro\">\n                        {title}\n                    </h1>\n                </DialogTitle>\n                <DialogContent className=\"p-0 mb-3\">\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <span className=\"block text-lg leading-none text-black font-sfpro\">\n                            {content}\n                        </span>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions className=\"flex flex-col w-full gap-2 p-0 phone:flex-row\">\n                    <Button\n                        className=\"w-full phone:w-auto\"\n                        innerClassName=\"py-1 px-3.5 h-4 font-normal normal-case border-none\"\n                        onClick={handleClose}\n                        type=\"button\"\n                    >\n                        Huỷ bỏ\n                    </Button>\n                    <Button\n                        className=\"w-full phone:w-auto\"\n                        primary\n                        innerClassName=\"py-1 px-3.5 h-4 font-normal normal-case\"\n                        onClick={handleConfirm}\n                        type=\"submit\"\n                    >\n                        Đồng ý\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AlertDialog;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { colors } from \"common/styles/colors\";\n\nexport const useStyles = makeStyles({\n    inputFieldHidden: {\n        opacity: 0,\n        position: \"absolute\",\n    },\n    formHelperText: {\n        color: colors.error,\n    },\n});\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport TextField, { BaseTextFieldProps } from \"@material-ui/core/TextField\";\nimport { randomId } from \"common/functions\";\nimport { t } from \"language\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { useStyles } from \"./styles\";\n\ninterface ITextAreaProps extends BaseTextFieldProps {\n    label: string;\n    name: string;\n    value?: string;\n    onChange?: (value: string, name?: string) => void;\n    required?: boolean;\n    errorMessage?: string;\n    helpInputText?: string;\n    placeholder?: string;\n}\n\nconst TextArea: React.FC<ITextAreaProps> = props => {\n    const {\n        className = \"\",\n        label,\n        name,\n        value = \"\",\n        onChange,\n        required,\n        helpInputText = \"\",\n        errorMessage = t(\"common.text-area-placeholder\"),\n        placeholder = t(\"common.text-area-placeholder\"),\n        ...rest\n    } = props;\n    const validators = required ? [\"required\"] : [];\n    const classes = useStyles();\n\n    const id = randomId();\n    const [text, setText] = useState(value);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        if (value) {\n            setText(value);\n        } else {\n            setText(\"\");\n        }\n    }, [value]);\n\n    const handleValidate = (isValid: boolean) => {\n        if (isValid) {\n            isError && setIsError(false);\n        } else {\n            !isError && setIsError(true);\n        }\n    };\n\n    const handleChange = (event: any) => {\n        const currentValue = event.target?.value || \"\";\n        if (name) {\n            onChange && onChange(currentValue, name);\n        } else {\n            onChange && onChange(currentValue);\n        }\n        setText(currentValue);\n    };\n\n    return (\n        <>\n            <div className={`text-validator-wrapper ${className}`}>\n                {label && (\n                    <p className=\"text-lg font-medium flex items-center mb-0.5\">\n                        {label}\n                        {required && <span className=\"text-error\">*</span>}\n                        {helpInputText && (\n                            <span className=\"text-sm text-body ml-0.5 \">\n                                {helpInputText}\n                            </span>\n                        )}\n                    </p>\n                )}\n                <TextField\n                    placeholder={placeholder}\n                    className=\"bg-white\"\n                    id={id}\n                    style={{\n                        width: \"100%\",\n                    }}\n                    multiline\n                    rows={8}\n                    variant=\"outlined\"\n                    name={name}\n                    value={text}\n                    onChange={handleChange}\n                    {...(rest as any)}\n                />\n                {isError && (\n                    <FormHelperText\n                        className=\"font-sfpro\"\n                        error\n                        variant=\"outlined\"\n                    >\n                        {errorMessage}\n                    </FormHelperText>\n                )}\n            </div>\n            {required && (\n                <TextValidator\n                    value={text}\n                    name={id}\n                    validators={validators}\n                    errorMessages={[errorMessage]}\n                    className={`${classes.inputFieldHidden} -z-1`}\n                    validatorListener={handleValidate}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TextArea;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export const STATIC_PAGE = \"STATIC_PAGE\";\nexport const ADS_BY_IMAGE = \"ADS_BY_IMAGE\";\nexport const ADS_BY_CODE = \"ADS_BY_CODE\";\n","import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    IAds,\n    IAdsInput,\n    ICreateAds,\n    IRootState,\n    ITypes,\n    IUpdateAds,\n} from \"common/formatTypes\";\nimport Dialog, { DialogTitle } from \"components/Dialog\";\nimport Input from \"designs/Input\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"designs/Select\";\n\nimport { getTypesByCode } from \"redux/actions/types\";\nimport { ADS_BY_CODE } from \"constants/typeByCodes\";\nimport { createAds, updateAds } from \"redux/actions/ads\";\nimport { t } from \"language\";\nimport TextArea from \"designs/TextArea\";\n\ninterface IConfigAdsByCodeDialogProps {\n    ButtonMenu: React.ReactElement;\n    isEdit?: boolean;\n    editField?: IAds | null;\n    className?: string;\n}\n\nconst ConfigAdsByCodeDialog: React.FC<IConfigAdsByCodeDialogProps> = props => {\n    const dispatch = useDispatch();\n    const { listTypes: listAdsPositions = [] } = useSelector(\n        (state: IRootState) => state.types,\n    );\n    const { ButtonMenu, isEdit, editField, className } = props;\n    const [formField, setFormField] = useState<IAdsInput>({});\n    const [adsLocationSelected, setAdsLocationSelected] = useState<ITypes>();\n\n    useEffect(() => {\n        dispatch(getTypesByCode({ code: ADS_BY_CODE }));\n    }, []);\n\n    useEffect(() => {\n        if (editField) {\n            setAdsLocationSelected(editField?.displayLocation);\n        }\n    }, [editField]);\n\n    const handleSubmit = () => {\n        const input: IAdsInput = {\n            ...formField,\n        };\n\n        if (isEdit) {\n            const payload: IUpdateAds = {\n                id: editField?._id || null,\n                fieldsToUpdate: input,\n            };\n            dispatch(updateAds(payload));\n        } else {\n            const payload: ICreateAds = {\n                createAdsInput: input,\n            };\n            dispatch(createAds(payload));\n        }\n    };\n\n    const handleChangeInput = (\n        // using for all input have value with type below:\n        value = \"\",\n        name?: string,\n    ) => {\n        name && setFormField({ ...formField, [name]: value });\n    };\n\n    const handleClose = () => {\n        setFormField({});\n        if (!editField) {\n            setAdsLocationSelected(undefined);\n        }\n    };\n\n    return (\n        <Dialog\n            ButtonMenu={ButtonMenu}\n            onConfirm={handleSubmit}\n            onClose={handleClose}\n            className={className}\n        >\n            <div className=\"w-full m-auto\">\n                <DialogTitle className=\"text-xxl mb-3\">\n                    {isEdit\n                        ? t(\"configAds.title-edit\")\n                        : t(\"configAds.title-add\")}\n                </DialogTitle>\n                <TextArea\n                    className=\"mb-2\"\n                    label={t(\"configAds.ads_code\")}\n                    value={editField?.code}\n                    name=\"code\"\n                    onChange={code => {\n                        setFormField(state => ({\n                            ...state,\n                            code,\n                        }));\n                    }}\n                    required\n                    errorMessage={t(\"generalSetting.null.code\")}\n                />\n                <Input\n                    className=\"my-2\"\n                    label={t(\"configAds.ads_name\")}\n                    value={editField?.name}\n                    name=\"name\"\n                    onChange={handleChangeInput}\n                    validates={{\n                        required: {\n                            errorMessage: t(\"generalSetting.null.ads-name\"),\n                        },\n                    }}\n                />\n                <Select\n                    label={t(\"configAds.ads_position\")}\n                    value={adsLocationSelected?.name}\n                    options={listAdsPositions}\n                    className=\"mb-2\"\n                    required\n                    errorMessage={t(\"generalSetting.null.select-position\")}\n                    onSelectOption={option => {\n                        setAdsLocationSelected(option);\n                        setFormField(state => ({\n                            ...state,\n                            displayLocation: option._id,\n                        }));\n                    }}\n                />\n                <Input\n                    className=\"mb-2\"\n                    label={t(\"configAds.ads_link\")}\n                    value={editField?.link}\n                    name=\"link\"\n                    onChange={handleChangeInput}\n                    validates={{\n                        required: {\n                            errorMessage: t(\"generalSetting.null.link\"),\n                        },\n                    }}\n                />\n            </div>\n        </Dialog>\n    );\n};\n\nexport default ConfigAdsByCodeDialog;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table, { IColumns } from \"designs/Table\";\nimport SVG from \"designs/SVG\";\nimport i18n, { t } from \"language\";\n\nimport AlertDialog from \"components/AlertDialog\";\nimport { IRootState } from \"redux/reducers\";\nimport { IAds, IGetAdsAll, ITypes } from \"common/formatTypes\";\nimport { setBreadcrumb } from \"redux/actions/_config\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { usePage } from \"common/hooks/usePage\";\nimport { getQueryFromLocation } from \"common/functions/route/getQueryFromLocationl\";\nimport { getAdsAll, removeAds } from \"redux/actions/ads\";\nimport { resetAction } from \"redux/actions/common\";\nimport { shouldDecreasePageIndex } from \"common/functions\";\nimport Button from \"designs/Button\";\nimport Dialog from \"./components/Dialog\";\n\nconst SIZE_PER_PAGE = 10;\n\nconst AdsByCode: React.FC<RouteComponentProps> = ({ location }) => {\n    const dispatch = useDispatch();\n    const [page, setPage] = usePage(getQueryFromLocation(location)?.page);\n    const [isRemoveAction, setIsRemoveAction] = useState<boolean>(false);\n    const { allAds = [], loading = true } = useSelector(\n        (state: IRootState) => state.ads,\n    );\n    const { actionSuccess } = useSelector((state: IRootState) => state.common);\n\n    const [listAds, setListAds] = useState<IAds[]>([]);\n\n    useEffect(() => {\n        setupBreadcrumb();\n    }, [page]);\n    const setupBreadcrumb = () => {\n        dispatch(\n            setBreadcrumb([\n                {\n                    name: t(\"breadcrumb.ads_by_code\"),\n                },\n            ]),\n        );\n    };\n\n    const handleOnSubmit = () => {\n        // test successful\n    };\n\n    useEffect(() => {\n        getAllAdsAPI();\n    }, []);\n\n    useEffect(() => {\n        renderAds();\n    }, [allAds]);\n\n    useEffect(() => {\n        if (actionSuccess) {\n            if (\n                isRemoveAction &&\n                shouldDecreasePageIndex(page, allAds.length, SIZE_PER_PAGE)\n            ) {\n                setPage(page - 1);\n            }\n            dispatch(resetAction());\n            setIsRemoveAction(false);\n            getAllAdsAPI();\n        }\n    }, [actionSuccess]);\n\n    const renderAds = () => {\n        const draftArray = [];\n        for (const ads of allAds) {\n            if (ads.displayLocation?.code === \"ADS_BY_CODE\") {\n                draftArray.push(ads);\n            }\n        }\n        setListAds(draftArray);\n    };\n\n    const getAllAdsAPI = () => {\n        const payload: IGetAdsAll = {\n            filterAds: {},\n        };\n        dispatch(getAdsAll(payload));\n    };\n\n    const handleDelete = (record: IAds) => {\n        dispatch(\n            removeAds({\n                id: record._id!,\n            }),\n        );\n        setIsRemoveAction(true);\n    };\n    const handleChangePage = useCallback((nextPage: number) => {\n        setPage(nextPage);\n    }, []);\n\n    const renderAction = (record: IAds) => {\n        return (\n            <div className=\"flex justify-end\">\n                <AlertDialog\n                    className=\"ml-1 \"\n                    ButtonMenu={<SVG name=\"common/delete\" />}\n                    title={t(\"configAds.title-delete\")}\n                    content={t(\"configAds.content-delete\")}\n                    onConfirm={() => handleDelete(record)}\n                />\n                <Dialog\n                    ButtonMenu={<SVG name=\"common/edit\" className=\"ml-1\" />}\n                    isEdit\n                    editField={record}\n                />\n            </div>\n        );\n    };\n\n    const columns: IColumns = useMemo(\n        () => [\n            {\n                text: t(\"configAds.ads_name\"),\n                dataField: \"name\",\n            },\n            {\n                text: t(\"configAds.ads_type\"),\n                dataField: \"displayLocation\",\n                formatter: (displayLocation: ITypes) => (\n                    <div>{displayLocation?.name}</div>\n                ),\n            },\n            {\n                text: t(\"configAds.ads_link\"),\n                dataField: \"link\",\n            },\n            {\n                text: t(\"configAds.ads_code\"),\n                dataField: \"code\",\n            },\n            {\n                text: t(\"configAds.action\"),\n                dataField: \"actions\",\n                formatter: (cell: null, record: IAds) => renderAction(record),\n            },\n        ],\n        [i18n.language],\n    );\n    return (\n        <div className=\"\">\n            <h1 className=\"mb-2 font-bold leading-none text-xxl font-sfpro\">\n                {t(\"breadcrumb.ads_by_code\")}\n            </h1>\n            <div className=\"flex flex-col items-center justify-end w-full max-w-full gap-2 pb-3 phone:flex-row\">\n                <Dialog\n                    ButtonMenu={\n                        <Button\n                            primary\n                            innerClassName=\"py-1.5 h-4 text-lg font-medium font-sfpro normal-case h-full\"\n                            type=\"submit\"\n                        >\n                            {t(\"configAds.title-add\")}\n                        </Button>\n                    }\n                    className=\"w-full max-w-full phone:w-25\"\n                />\n            </div>\n            <Table\n                data={listAds}\n                columns={columns}\n                totalSize={allAds.length}\n                page={page}\n                loading={loading}\n                onPageChange={handleChangePage}\n                sizePerPage={SIZE_PER_PAGE}\n            />\n        </div>\n    );\n};\nexport default withRouter(AdsByCode);\n"],"sourceRoot":""}